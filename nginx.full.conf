
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    server {
        listen 80;

        location /api {
            proxy_pass         http://localhost:3000;
            proxy_redirect     off;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            # proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;

            # client_max_body_size       128k;
            # client_body_buffer_size    128k;

            # proxy_connect_timeout      90;
            # proxy_send_timeout         90;
            # proxy_read_timeout         90;

            # proxy_buffer_size          4k;
            # proxy_buffers              4 32k;
            # proxy_busy_buffers_size    64k;
            # proxy_temp_file_write_size 64k;
        }

        location /socket.io {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location / {
            try_files $uri$args $uri$args/ /index.html;
            root   /var/www/static/stereostream-angular-dist/dist;
            index  index.html index.htm;
        }
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #

    server {
        listen 443 http2 ssl;
        listen [::]:443 http2 ssl;

        ssl_certificate /usr/local/etc/nginx/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /usr/local/etc/nginx/ssl/private/nginx-selfsigned.key;
        ssl_dhparam /usr/local/etc/nginx/ssl/certs/dhparam.pem;

        location /api {
            proxy_pass         http://localhost:3000;
            proxy_redirect     off;

            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            # proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;

            # client_max_body_size       128k;
            # client_body_buffer_size    128k;

            # proxy_connect_timeout      90;
            # proxy_send_timeout         90;
            # proxy_read_timeout         90;

            # proxy_buffer_size          4k;
            # proxy_buffers              4 32k;
            # proxy_busy_buffers_size    64k;
            # proxy_temp_file_write_size 64k;
        }

        location /socket.io {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location / {
            try_files $uri$args $uri$args/ /index.html;
            root   /var/www/static/stereostream-angular-dist/dist;
            index  index.html index.htm;
        }
    }
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;
}
